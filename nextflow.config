// Basic pipeline configurations
manifest {
    name = 'PrimateConstraintHal'
    description = 'A Nextflow pipeline for primate constraint analysis'
    author = 'Your Name'
    mainScript = 'main.nf'
    version = '1.0.0'
}

// Global parameters
params {
    // Paths to key files
    outdir = "${projectDir}/results"
    temp_dir = "${projectDir}/tmp"
    species_file = "${projectDir}/233primates_s1.csv"
    hal_file = "${projectDir}/447-mammalian-2022v1.hal"

    // Resource limits
    max_memory = '1500 GB'
    max_cpus = 96
    max_time = '120 h'

    // Directories
    scriptsDir = "${projectDir}/scripts"
    dataDir = "${projectDir}/data"

    // Control flags
    test_mode = false
}

// Container configurations
singularity {
    enabled = true
    autoMounts = true
    runOptions = "--bind $projectDir:$projectDir,$HOME:$HOME  --home $HOME"
}

// Default container for all processes
process {
    container = "${projectDir}/cactus_v2.9.3_w_plrs.sif"

    // Error handling strategy
    errorStrategy = { task.attempt <= 3 ? 'retry' : 'finish' }
    maxRetries = 3

    // Retry delay with exponential backoff
    maxErrors = '-1'

    // Resource scaling with retry attempts
    memory = { task.attempt <= 3 ? params.max_memory : params.max_memory.replace('GB', '').toInteger() * 1.5 + 'GB' }
    time = { task.attempt <= 3 ? params.max_time : params.max_time.replace('h', '').toInteger() * 1.5 + 'h' }

    // Process-specific overrides
    withName: 'ANNOTATE_VEP' {
        container = "${projectDir}/annotation.sif"
    }

    withName: 'PROCESS_VEP' {
        memory = params.max_memory
    }

    withName: 'VCF2MT' {
        memory = { params.max_memory.replace('GB', '').toInteger() > 32 ? '32 GB' : params.max_memory }
    }

    // Lightweight processes can use less resources
    withName: 'MAKE_VEP_CONFIG|GET_VCF_IDS|MAKE_ALIAS_MANIFEST|MAKE_SAMPLE2REF_MAP|GET_CHROM_FORMAT.*' {
        cpus = 1
        memory = '4 GB'
        time = '1h'
    }

    withName: 'CHECK_BASESPACE_AUTH' {
        container = null  // No container for this process
        executor = 'local'
    }
}

// Define executor
executor {
    name = 'local'
    cpus = params.max_cpus
    memory = params.max_memory
}

// Profiles for different execution environments
profiles {
    standard {
        process.executor = 'local'
    }

}
